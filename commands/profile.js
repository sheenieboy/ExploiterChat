const Discord = require('discord.js');
var request = require('request');
module.exports = {
	name: 'profile',
	aliases: ['profile'],
	guildOnly: true,
	ownerOnly: false,
	cooldown: 2,
	description: 'Display some user information',
	usage: '$profile <@Username/Username>',
	async run(client, message, args, con) {
		function displayUser(UserInfo) {
            if(UserInfo) {
				if(!UserInfo.ProfileAccessale) { return msg.channel.send(`This users profile isnt accessable`); }
                var url = `http://api.roblox.com/Marketplace/ProductInfo?assetId=${UserInfo.LastPlayed}`;
                request.get({
                    url: url,
                    json: true,
                    headers: {'User-Agent': 'request'}
                }, (err, res, data) => {
                    if (err) {
                        console.log('Error:', err);
                    } else if (res.statusCode == 200) {
                       var LoggedOnUsers = global.LoggedOnUsers;
                       let embed = new Discord.MessageEmbed()
                       .setColor('RANDOM')
                       .setThumbnail(`https://www.roblox.com/headshot-thumbnail/image?userId=${UserInfo.UserId}&width=100&height=100&format=png`)
                       .addField('Online Status in ExploiterChat', LoggedOnUsers.indexOf(UserInfo.Username) !== -1 ? "Online" : "Offline", true)
                       .addField('Title', UserInfo.Rank, true)
                       .addField('Discord', (UserInfo.DiscordID !== null) ? "Linked" : "Not Linked", true)
                       .addField('Last Game Played', data.Name, true) 
                       .addField('Exploit', UserInfo.Exploit, true)
                       .setTimestamp()
                       .setFooter(`ID: ${message.guild.id}`);
                       message.channel.send(embed);
                    }
                });
            }
		}

		var taggedUser = message.mentions.users.first();
		var UserId;
		if (taggedUser) {
			con.query("SELECT * FROM `Users` WHERE `DiscordID` = '" + taggedUser.id + "' LIMIT 1", function (err, result) {
				if (result.length) { 
					displayUser(result[0])
					return;
				} else { 
					msg.channel.send(`User is not linked to an account`);
					return;
				}
			});
		} else {
			con.query("SELECT * FROM `Users` WHERE `Username` = '" + args[0] + "' LIMIT 1", function (err, result) {
				if (result.length) { 
					displayUser(result[0])
					return;
				} else { 
					msg.channel.send(`User not found`);
					return;
				}
			});
		}
	}
};