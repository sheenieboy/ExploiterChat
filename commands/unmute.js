const Discord = require('discord.js');
const moment = require('moment')
module.exports = {
	name: 'unmute',
	aliases: ['unmute'],
	guildOnly: true,
	ownerOnly: false,
	moderatorsOnly: true,
	cooldown: 2,
	description: 'Unmute a user',
	usage: '<@Username/UserID>',
	async run(client, message, args, con) {
        var taggedUser = message.mentions.members.first();
        if (!taggedUser) {
            if(message.guild.members.cache.get(args[0])) {
                taggedUser = message.guild.members.cache.get(args[0]);
            }
        }
        if(taggedUser) { 
            UnMute(taggedUser)
            con.query("SELECT `Username` FROM `Users` WHERE `DiscordID` = '" + taggedUser.id + "'", function (err, discordC) {
                if(discordC.length) {
                    con.query("UPDATE `Users` SET `Muted` = '0' WHERE `DiscordID` = '" + taggedUser.id + "'", function (err, result) { if (err) console.log(err); });
                    con.query("INSERT INTO `ModeratorLogs` (`Username`,`Action`,`Time`,`IpAddress`) VALUES ('DiscordID: " + message.author.id + "','UnMuted user: " + taggedUser.id + "','" + moment().format('YYYY-MM-DD HH:mm:ss') + "','From Discord')", function (err, result) { if (err) console.log(err); });
                }
            });
        } else {
            con.query("SELECT `DiscordID` FROM `Users` WHERE `Username` = '" + args[0] + "'", function (err, discordC) {
                if(discordC.length) {
                    taggedUser = message.guild.members.cache.get(discordC[0].DiscordID);
                    con.query("UPDATE `Users` SET `Muted` = '0' WHERE `Username` = '" + args[0] + "'", function (err, result) { if (err) console.log(err); });
                    con.query("INSERT INTO `ModeratorLogs` (`Username`,`Action`,`Time`,`IpAddress`) VALUES ('DiscordID: " + message.author.id + "','UnMuted user: " + args[0] + "','" + moment().format('YYYY-MM-DD HH:mm:ss') + "','From Discord')", function (err, result) { if (err) console.log(err); });
                    UnMute(taggedUser)
                }
            });
        }
        function UnMute(User) {
            if(!User) { return message.channel.send("User not found") }
            const muterole = message.guild.roles.cache.find((role) => role.name === 'Muted');
            if (User.roles.cache.has(muterole.id)) {
                User.roles.remove(muterole);
                return message.channel.send("Unmuted User")
            } else {
                return message.channel.send("User is not muted")
            }
        }
    }
};