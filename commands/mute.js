const Discord = require('discord.js');
const moment = require('moment')
module.exports = {
	name: 'mute',
	aliases: ['mute','tempmute'],
	guildOnly: true,
	ownerOnly: false,
	moderatorsOnly: false,
	cooldown: 2,
	description: 'Mute a user',
	usage: '<@Username/UserID> <Reason> <Days> <Hours> <Seconds>',
	async run(client, message, args, con) {
        var TimeToMute = moment();
        var a = args
        var i;
        for (i = 1; i < a.length; i++) {
            var addTime = a[i];
            if(addTime.toLowerCase() == "perm") {
                TimeToMute = TimeToMute.add(50, 'years')
            } else if(addTime.includes("d")) {
                TimeToMute = TimeToMute.add(addTime.replace(/[^0-9]/g,''), 'days')
            } else if(addTime.includes("y")) {
                TimeToMute = TimeToMute.add(addTime.replace(/[^0-9]/g,''), 'years')
            } else if(addTime.includes("m")) {
                TimeToMute = TimeToMute.add(addTime.replace(/[^0-9]/g,''), 'minutes')
            } else if(addTime.includes("s")) {
                TimeToMute = TimeToMute.add(addTime.replace(/[^0-9]/g,''), 'seconds')
            } else if(addTime.includes("h")) {
                TimeToMute = TimeToMute.add(addTime.replace(/[^0-9]/g,''), 'hours')
            }
        }

        var taggedUser = message.mentions.members.first();
        if (!taggedUser) {
            if(message.guild.members.cache.get(args[0])) {
                taggedUser = message.guild.members.cache.get(args[0]);
                taggedUser = taggedUser.user
            }
        }
        if(taggedUser) { 
            con.query("SELECT `Username` FROM `Users` WHERE `DiscordID` = '" + taggedUser.id + "'", function (err, discordC) {
                if(discordC.length) {
                    con.query("UPDATE `Users` SET `Muted` = '" + TimeToMute.format('YYYY-MM-DD HH:mm:ss') + "' WHERE `DiscordID` = '" + taggedUser.id + "'", function (err, result) { if (err) console.log(err); });
                    con.query("INSERT INTO `ModeratorLogs` (`Username`,`Action`,`Time`,`IpAddress`) VALUES ('DiscordID: " + message.author.id + "','Muted user: " + taggedUser.id + "','" + moment().format('YYYY-MM-DD HH:mm:ss') + "','From Discord')", function (err, result) { if (err) console.log(err); });
                }
            });
        } else {
            con.query("SELECT `DiscordID` FROM `Users` WHERE `Username` = '" + args[0] + "'", function (err, discordC) {
                if(discordC.length) {
                    con.query("UPDATE `Users` SET `Muted` = '" + TimeToMute.format('YYYY-MM-DD HH:mm:ss') + "' WHERE `Username` = '" + args[0] + "'", function (err, result) { if (err) console.log(err); });
                    con.query("INSERT INTO `ModeratorLogs` (`Username`,`Action`,`Time`,`IpAddress`) VALUES ('DiscordID: " + message.author.id + "','Muted user: " + args[0] + "','" + moment().format('YYYY-MM-DD HH:mm:ss') + "','From Discord')", function (err, result) { if (err) console.log(err); });
                }
            });
        }
        
        /*
        if (!User) {
            return message.channel.send('You did not provide a member to mute.');
        }

        var reason = args[1];
        if (!reason) {
            return message.channel.send('Please provide a reason for the mute.');
        }
        var muteTime = moment(new Date());
        var days = args[2] || "perm";
        if(days >= 1) {
            muteTime = muteTime.add(days, 'days')
        }
        var hours = args[3] || 0;
        if(hours >= 1) {
            muteTime = muteTime.add(hours, 'hours')
        }

        var minutes = args[4] || 0;
        if(minutes >= 1) {
            muteTime = muteTime.add(minutes, 'minutes')
        }

        if (message.member.hasPermission('MANAGE_ROLES')) {
            let muterole = message.guild.roles.cache.get('800528478142726155');

            let usermsg = new Discord.MessageEmbed()
            .setTitle(`${User.user.username} has been Muted Successfully.`)
            .setColor('76b3fc')
            .addField('Muted By',  `<@${message.author.id}>`)
            .addField('Reason', `${reason}`)
            .setFooter(`Do not attempt to bypass`);

            User.roles.add(muterole);
            if(days.toLowerCase() == "perm" || args[2].toLowerCase() == "permanent") {
                usermsg.addField('Punishment Time:', 'Permanent');
            } else {
                var timeRemaining = `${days} days, ${hours} hours, ${minutes} minutes`
                console.log(timeRemaining)
                usermsg.addField('Punishment Time:', timeRemaining)
                setTimeout(() => {
                    User.roles.remove(muterole);
                }, muteTime.diff(moment(), 'milliseconds'));
            }
            message.channel.send(usermsg);
        } else {
            message.reply('You do not have permission to do this.');
        }*/
    }
};